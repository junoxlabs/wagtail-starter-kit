# Generated by Django 5.2.4 on 2025-09-11 14:05

import django.db.models.deletion
import modelcluster.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("pages", "0001_initial"),
        ("wagtailcore", "0094_alter_page_locale"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("url", models.URLField()),
                (
                    "link_type",
                    models.CharField(
                        choices=[
                            ("website", "Website"),
                            ("github", "GitHub"),
                            ("demo", "Demo"),
                            ("documentation", "Documentation"),
                            ("other", "Other"),
                        ],
                        default="website",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Link",
                "verbose_name_plural": "Links",
            },
        ),
        migrations.CreateModel(
            name="PortfolioItemPage",
            fields=[
                (
                    "flexpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pages.flexpage",
                    ),
                ),
                (
                    "url_type_preference",
                    models.CharField(
                        choices=[("seo", "SEO-friendly Slug"), ("uuid", "UUID-based")],
                        default="seo",
                        help_text="Choose whether to display SEO-friendly URLs or UUID-based URLs",
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="pages.category",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Portfolio Item Page",
                "verbose_name_plural": "Portfolio Item Pages",
            },
            bases=("pages.flexpage",),
        ),
        migrations.CreateModel(
            name="PortfolioItemLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="pages.link",
                    ),
                ),
                (
                    "portfolio_item",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="pages.portfolioitempage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectPage",
            fields=[
                (
                    "flexpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pages.flexpage",
                    ),
                ),
                (
                    "url_type_preference",
                    models.CharField(
                        choices=[("seo", "SEO-friendly Slug"), ("uuid", "UUID-based")],
                        default="seo",
                        help_text="Choose whether to display SEO-friendly URLs or UUID-based URLs",
                        max_length=10,
                    ),
                ),
                (
                    "has_page",
                    models.BooleanField(
                        default=False,
                        help_text="Check this box if this project has its own page",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="pages.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Page",
                "verbose_name_plural": "Project Pages",
            },
            bases=("pages.flexpage",),
        ),
        migrations.CreateModel(
            name="ProjectLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="pages.link",
                    ),
                ),
                (
                    "project",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="pages.projectpage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ResourcePage",
            fields=[
                (
                    "flexpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pages.flexpage",
                    ),
                ),
                (
                    "url_type_preference",
                    models.CharField(
                        choices=[("seo", "SEO-friendly Slug"), ("uuid", "UUID-based")],
                        default="seo",
                        help_text="Choose whether to display SEO-friendly URLs or UUID-based URLs",
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="pages.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Page",
                "verbose_name_plural": "Resource Pages",
            },
            bases=("pages.flexpage",),
        ),
        migrations.CreateModel(
            name="ResourceLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="pages.link",
                    ),
                ),
                (
                    "resource",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="pages.resourcepage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServicePage",
            fields=[
                (
                    "flexpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pages.flexpage",
                    ),
                ),
                (
                    "url_type_preference",
                    models.CharField(
                        choices=[("seo", "SEO-friendly Slug"), ("uuid", "UUID-based")],
                        default="seo",
                        help_text="Choose whether to display SEO-friendly URLs or UUID-based URLs",
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="pages.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Page",
                "verbose_name_plural": "Service Pages",
            },
            bases=("pages.flexpage",),
        ),
        migrations.CreateModel(
            name="ServiceLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "link",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="pages.link",
                    ),
                ),
                (
                    "service",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="pages.servicepage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShowcasePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "canonical_url",
                    models.URLField(
                        blank=True,
                        help_text="Leave blank to use the page's URL.",
                        max_length=255,
                        verbose_name="Canonical URL",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "custom_structured_data",
                    models.TextField(
                        blank=True,
                        help_text="Additional structured data for this page in JSON-LD format.",
                        null=True,
                    ),
                ),
                (
                    "entity_types_to_display",
                    models.CharField(
                        choices=[
                            ("projects", "Projects"),
                            ("services", "Services"),
                            ("portfolio", "Portfolio Items"),
                            ("resources", "Resources"),
                        ],
                        default="projects",
                        help_text="Select which entity type to display",
                        max_length=100,
                    ),
                ),
                (
                    "category_filter",
                    models.ForeignKey(
                        blank=True,
                        help_text="Filter entities by category (leave blank to show all)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="pages.category",
                    ),
                ),
                (
                    "og_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Shown when linking to this page on social media. If blank, may show an image from the page, or the default from Settings > SEO.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Preview image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Showcase Page",
                "verbose_name_plural": "Showcase Pages",
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
