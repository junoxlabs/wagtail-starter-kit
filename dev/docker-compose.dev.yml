# docker-compose.yml
# For development environment

services:
  # db:
  #   image: postgres:17-trixie # if you need to use normal postgres image
  #   container_name: wagtail-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: "postgres"
  #     POSTGRES_PASSWORD: "postgres"
  #     POSTGRES_DB: "db"
  #   volumes:
  #     - wagtail_db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres -d db"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  # redis:
  #   image: valkey/valkey:7-alpine
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   volumes:
  #     - redis_dev:/data

  s3:
    image: bitnami/minio:2025.4.22 ### !minio removed console ui in newer version; keep this version for DEV ###
    container_name: minio
    restart: unless-stopped
    volumes:
      - minio_data:/bitnami/minio/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadminpassword
      MINIO_DEFAULT_BUCKETS: wagtail-media, db-backups
      MINIO_SCHEME: http
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  litestream:
    image: litestream/litestream
    container_name: litestream
    restart: unless-stopped
    depends_on:
      - s3
      - app
    environment:
      - AWS_REGION=us-east-1
    volumes:
      - database:/data
      - ./litestream.yml:/etc/litestream.yml
    command: replicate -config /etc/litestream.yml

  app:
    build:
      context: ..
      dockerfile: dev/Dockerfile
    container_name: django-app
    restart: unless-stopped
    depends_on:
      - s3
    env_file:
      - ../.env
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      # - DATABASE_URL=postgresql://postgres:postgres@db:5432/db
      # - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadminpassword
      - AWS_STORAGE_BUCKET_NAME=wagtail-media
      - AWS_S3_REGION_NAME=us-east-1
      - AWS_S3_ENDPOINT_URL=http://s3:9000
      - AWS_S3_PUBLIC_ENDPOINT_URL=http://localhost:9000
      - AWS_S3_SECURE_URLS=false
    volumes:
      - ..:/app
      - database:/app/db
      - django_venv:/app/.venv
      - frontend_node_modules:/app/frontend/node_modules
    ports:
      - "8000:8000" # Django
      - "5173:5173" # Vite
    networks:
      - default

volumes:
  database:
  # wagtail_db_data:
  # redis_dev:
  minio_data:
  django_venv:
  frontend_node_modules:
